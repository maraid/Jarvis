substitutions:
  # main prefix for all entities
  name: "Desk"
  # name of your node
  node_name: "jarvis-desk"

esphome:
  name: $node_name
  platform: ESP8266
  board: d1_mini
  includes:
    - src/adapter/esphome/esphome_adapter.h
    - src/adapter/esphome/esphome_adapter.cpp
    - src/adapter/esphome/callbacks.h
    - src/common/constants.h
    - src/common/logger.h
    - src/common/logger.cpp
    - src/common/ring_buffer.h
    - src/common/timer.h
    - src/common/timer.cpp
    - src/common/utils.h
    - src/common/utils.cpp
    - src/serial/serial_device.h
    - src/serial/serial_device.cpp
    - src/serial/serial_message.h
    - src/serial/serial_message.cpp
    - src/controller_handler.h
    - src/controller_handler.cpp
    - src/handset_handler.h
    - src/handset_handler.cpp
    - src/jarvis.h
    - src/jarvis.cpp

  libraries:
    - espsoftwareserial
    
  
wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Jarvis Fallback Hotspot"
    password: "h1fsn2O9OSkB"

web_server:
  port: 80
  version: 2

captive_portal:

# Enable logging
logger:
  baud_rate: 0

# Enable Home Assistant API
api:

ota:

custom_component:
  lambda: |-
    auto jarvis = new EspHomeJarvisAdapter(
      id(height_number),
      id(preset_1_sensor),
      id(preset_2_sensor),
      id(preset_3_sensor),
      id(preset_4_sensor),
      id(sys_limit_min),
      id(sys_limit_max),
      id(user_limit_min),
      id(user_limit_max),
      id(user_limit_set),
      id(units_select),
      id(touch_mode_select),
      id(anti_collision_mode_select),
      id(sensitivity_select)
    );
    return {jarvis};
  components:
    - id: desk

binary_sensor:
  - platform: status
    name: "Desk Status"

sensor:
  - platform: template
    name: "$name Preset 1 Position"
    id: preset_1_sensor
  - platform: template
    name: "$name Preset 2 Position"
    id: preset_2_sensor
  - platform: template
    name: "$name Preset 3 Position"
    id: preset_3_sensor
  - platform: template
    name: "$name Preset 4 Position"
    id: preset_4_sensor
  - platform: template
    name: "$name User limit min"
    id: user_limit_min
  - platform: template
    name: "$name User limit max"
    id: user_limit_max
  - platform: template
    name: "$name System limit min"
    id: sys_limit_min
  - platform: template
    name: "$name System limit max"
    id: sys_limit_max
  # - platform: dht
  #   model: DHT22
  #   pin: D3
  #   temperature:
  #     name: "Room Temperature"
  #   humidity:
  #     name: "Room Humidity"
  #   update_interval: 60s

text_sensor:
  - platform: template
    name: "$name User limit set"
    id: user_limit_set
  
select:
  - platform: template
    name: "$name Units"
    id: units_select
    options:
      - inch
      - cm
    optimistic: false
    set_action:
      - lambda: (*reinterpret_cast<EspHomeJarvisAdapter*>(id(desk))).setUnits(x.c_str());
  - platform: template
    name: "$name Touch Mode"
    id: touch_mode_select
    options:
      - Continuous
      - Single
    optimistic: false
    set_action:
      - lambda: (*reinterpret_cast<EspHomeJarvisAdapter*>(id(desk))).setTouchMode(x.c_str());
  - platform: template
    name: "$name Anti-Collision Mode"
    id: anti_collision_mode_select
    options:
      - Disabled
      - Enabled
    optimistic: false
    set_action:
      - lambda: (*reinterpret_cast<EspHomeJarvisAdapter*>(id(desk))).setAntiCollisionMode(x.c_str());
  - platform: template
    name: "$name Sensitivity"
    id: sensitivity_select
    options:
      - High
      - Medium
      - Low
    optimistic: false
    set_action:
      - lambda: (*reinterpret_cast<EspHomeJarvisAdapter*>(id(desk))).setSensitivity(x.c_str());

number:
  - platform: template
    name: "$name Height"
    id: height_number
    optimistic: false
    min_value: 1
    max_value: 1800
    step: 10
    set_action:
      - lambda: (*reinterpret_cast<EspHomeJarvisAdapter*>(id(desk))).moveTo(x);
  - platform: template
    name: "$name Offset"
    id: offset_number
    optimistic: true
    min_value: 1
    max_value: 1800
    step: 1
    set_action:
      - lambda: (*reinterpret_cast<EspHomeJarvisAdapter*>(id(desk))).setOffset(x);
  - platform: template
    name: "$name Display number"
    id: display_number
    optimistic: true
    min_value: 0.1
    max_value: 180
    step: 0.1
    set_action:
      - lambda: (*reinterpret_cast<EspHomeJarvisAdapter*>(id(desk))).setDisplayNumber(x*10);

button:
  - platform: template
    name: "$name Go to preset 1"
    id: go_preset_1
    on_press:
      then:
        - lambda: (*reinterpret_cast<EspHomeJarvisAdapter*>(id(desk))).moveToPreset1();
  - platform: template
    name: "$name Go to preset 2"
    id: go_preset_2
    on_press:
      - lambda: (*reinterpret_cast<EspHomeJarvisAdapter*>(id(desk))).moveToPreset2();
  - platform: template
    name: "$name Go to preset 3"
    id: go_preset_3
    on_press:
      then:
        - lambda: (*reinterpret_cast<EspHomeJarvisAdapter*>(id(desk))).moveToPreset3();
  - platform: template
    name: "$name Go to preset 4"
    id: go_preset_4
    on_press:
      then:
        - lambda: (*reinterpret_cast<EspHomeJarvisAdapter*>(id(desk))).moveToPreset4();
  - platform: template
    name: "$name Set preset 1"
    id: set_preset_1
    on_press:
      then:
        - lambda: (*reinterpret_cast<EspHomeJarvisAdapter*>(id(desk))).setPreset1();
  - platform: template
    name: "$name Set preset 2"
    id: set_preset_2
    on_press:
      then:
        - lambda: (*reinterpret_cast<EspHomeJarvisAdapter*>(id(desk))).setPreset2();
  - platform: template
    name: "$name Set preset 3"
    id: set_preset_3
    on_press:
      then:
        - lambda: (*reinterpret_cast<EspHomeJarvisAdapter*>(id(desk))).setPreset3();
  - platform: template
    name: "$name Set preset 4"
    id: set_preset_4
    on_press:
      then:
        - lambda: (*reinterpret_cast<EspHomeJarvisAdapter*>(id(desk))).setPreset4();
  - platform: template
    name: "$name Set max height"
    id: set_max_height
    on_press:
      then:
        - lambda: (*reinterpret_cast<EspHomeJarvisAdapter*>(id(desk))).setMaxHeight();
  - platform: template
    name: "$name Set min height"
    id: set_min_height
    on_press:
      then:
        - lambda: (*reinterpret_cast<EspHomeJarvisAdapter*>(id(desk))).setMinHeight();
  - platform: template
    name: "$name Set max height"
    id: clear_max_height
    on_press:
      then:
        - lambda: (*reinterpret_cast<EspHomeJarvisAdapter*>(id(desk))).clearMaxHeight();
  - platform: template
    name: "$name Set min height"
    id: clear_min_height
    on_press:
      then:
        - lambda: (*reinterpret_cast<EspHomeJarvisAdapter*>(id(desk))).clearMinHeight();








